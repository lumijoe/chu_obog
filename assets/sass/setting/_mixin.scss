@use "./config" as *;

// ======================================
// 表示行数の制御（三点リーダー）
// ex）@include line-clamp(1)
// ======================================
@mixin line-clamp($count: 3) {
  // 引数が数値以外だったらエラーを返す
  @if type-of($count) != "number" {
    @error "line-clampの引数は必ず数値で指定してください";
  }

  @if $count == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    -webkit-box-orient: vertical;
    white-space: wrap;

    -webkit-line-clamp: $count;
  }
}


// ======================================
// ブレイクポイント
// ex）@include mq(tb)
// ======================================
// Media Queryの設定
// @mixin mq($breakpoint: md, $rule: max, $subtraction: false) {
//   $breakpoint: map_get($mq-breakpoints, $breakpoint);

//   @if $rule==max {
//     $breakpoint: $breakpoint - 1;
//   }

//   @if $rule==min and $subtraction {
//     $breakpoint: $breakpoint - .0625;
//   }

//   @media screen and (#{$rule}-width: $breakpoint) {
//     @content;
//   }
// }

@mixin mq($breakpoint: md, $rule: max, $subtraction: false) {
  $breakpoint: map_get($mq-breakpoints, $breakpoint);

  @if $rule==max {
    $breakpoint: $breakpoint - 1;
    @media only screen and (#{$rule}-width: $breakpoint) {
      @content;
    }
  } @else {
    @if $subtraction {
      $breakpoint: $breakpoint - .0625;
    }
    @media print, screen and (#{$rule}-width: $breakpoint) {
      @content;
    }
  }
}


// ======================================
// カバーブロック 
// ex）@include coverBlock;
// ======================================
@mixin coverBlock {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

// ======================================
// 画像関連 
// ex）@include coverImage;
// ======================================
@mixin coverImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}


// ======================================
// カラー
// ======================================
@each $key, $value in $theme-colors {
  .bg-#{$key} {
    @if $key == "primary" {
      background-color: var(--theme-color, $value);
    } @else {
      background-color: $value;
    }
  }
  .btn-#{$key} {
    @if $key == "primary" {
      #{--bs-btn-bg}: var(--theme-color, $value);
    } @else {
      #{--bs-btn-bg}: $value;
    }
    @if $key != "light" {
      #{--bs-btn-color}: #fff;
      #{--bs-btn-hover-color}: #fff;
    }
  }
}


// ======================================
// フォントサイズ
// ======================================
@each $key, $value in $font-sizes {
  h#{$key} {
    font-size: $value;
  }
  .fs-#{$key} {
    font-size: $value;
  }
}


// ======================================
// margin・padding
// ======================================
$directions: (
  "t": "top",
  "b": "bottom",
  "s": "left",
  "e": "right",
  "x": "left-right",
  "y": "top-bottom",
  "": "all"
);

// @each $direction, $properties in $directions {
  
//   .m#{$direction}-auto {
//     @if $properties == "all" {
//       margin: auto !important;
//     } @else if $properties == "left-right" {
//       margin-right: auto !important;
//       margin-left: auto !important;
//     } @else if $properties == "top-bottom" {
//       margin-top: auto !important;
//       margin-bottom: auto !important;
//     } @else {
//       @each $property in $properties {
//         margin-#{$property}: auto !important;
//       }
//     }
//   } 

//   @each $key, $value in $spacers {
//     @if $properties == "all" {
//       .m#{$direction}-#{$key} {
//         margin: $value !important;
//       }
//       .p#{$direction}-#{$key} {
//         padding: $value !important;
//       }
//     } @else if $properties == "left-right" {
//       .m#{$direction}-#{$key} {
//         margin-right: $value !important;
//         margin-left: $value !important;
//       }
//       .p#{$direction}-#{$key} {
//         padding-right: $value !important;
//         padding-left: $value !important;
//       }
//     } @else if $properties == "top-bottom" {
//       .m#{$direction}-#{$key} {
//         margin-top: $value !important;
//         margin-bottom: $value !important;
//       }
//       .p#{$direction}-#{$key} {
//         padding-top: $value !important;
//         padding-bottom: $value !important;
//       }
//     } @else {
//       .m#{$direction}-#{$key} {
//         @each $property in $properties {
//           margin-#{$property}: $value !important;
//         }
//       }
//       .p#{$direction}-#{$key} {
//         @each $property in $properties {
//           padding-#{$property}: $value !important;
//         }
//       }
//     }
//   }
// }

// @each $direction, $properties in $directions {
//   @include mq(tb, min) {
//     @each $key, $value in $spacers {
//       @if $properties == "left-right" {
//         .m#{$direction}-pc-#{$key} {
//           margin-right: $value !important;
//           margin-left: $value !important;
//         }
//         .p#{$direction}-pc-#{$key} {
//           padding-right: $value !important;
//           padding-left: $value !important;
//         }
//       } @else if $properties == "top-bottom" {
//         .m#{$direction}-pc-#{$key} {
//           margin-top: $value !important;
//           margin-bottom: $value !important;
//         }
//         .p#{$direction}-pc-#{$key} {
//           padding-top: $value !important;
//           padding-bottom: $value !important;
//         }
//       } @else {
//         .m#{$direction}-pc-#{$key} {
//           @each $property in $properties {
//             margin-#{$property}: $value !important;
//           }
//         }
//         .p#{$direction}-pc-#{$key} {
//           @each $property in $properties {
//             padding-#{$property}: $value !important;
//           }
//         }
//       }
//     }
//   }
// }

// ======================================
// GAP
// ======================================
// @each $key, $value in $spacers {
//   .gap-#{$key} {
//     gap: $value !important;
//   }
// }

// @each $key, $value in $spacers {
//   .gx-#{$key} {
//     column-gap: $value !important;
//   }
// }

// @each $key, $value in $spacers {
//   .gy-#{$key} {
//     row-gap: $value !important;
//   }
// }